volumes:
  data:

networks:
  wren:
    driver: bridge

services:
  # Shared backend services
  bootstrap:
    image: ghcr.io/canner/wren-bootstrap:${WREN_BOOTSTRAP_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    environment:
      DATA_PATH: /app/data
    volumes:
      - data:/app/data
    command: /bin/sh /app/init.sh
    networks:
      - wren

  wren-engine:
    image: ghcr.io/canner/wren-engine:${WREN_ENGINE_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${WREN_ENGINE_PORT}
      - ${WREN_ENGINE_SQL_PORT}
    volumes:
      - data:/usr/src/app/etc
      - ${PROJECT_DIR}/data:/usr/src/app/data
    networks:
      - wren
    depends_on:
      - bootstrap

  ibis-server:
    image: ghcr.io/canner/wren-engine-ibis:${IBIS_SERVER_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${IBIS_SERVER_PORT}
    environment:
      WREN_ENGINE_ENDPOINT: http://wren-engine:${WREN_ENGINE_PORT}
    volumes:
      - ${LOCAL_STORAGE:-.}:/usr/src/app/data
    networks:
      - wren

  qdrant:
    image: qdrant/qdrant:v1.11.0
    restart: on-failure
    expose:
      - 6333
      - 6334
    volumes:
      - data:/qdrant/storage
    networks:
      - wren

  # GPT-4.1-mini AI Service
  wren-ai-service-gpt-4.1-mini:
    image: ghcr.io/canner/wren-ai-service:${WREN_AI_SERVICE_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${WREN_AI_SERVICE_PORT_GPT_4_1_MINI}
    ports:
      - ${AI_SERVICE_FORWARD_PORT_GPT_4_1_MINI}:${WREN_AI_SERVICE_PORT_GPT_4_1_MINI}
    environment:
      PYTHONUNBUFFERED: 1
      CONFIG_PATH: /app/config.yaml
      WREN_AI_SERVICE_PORT: ${WREN_AI_SERVICE_PORT_GPT_4_1_MINI}
      QDRANT_HOST: qdrant
    env_file:
      - ${PROJECT_DIR}/.env
    volumes:
      - ${PROJECT_DIR}/config.gpt-4.1-mini.yaml:/app/config.yaml:ro
      - ${PROJECT_DIR}/data:/app/data:ro
      - data:/app/data
    networks:
      - wren
    depends_on:
      - qdrant
    container_name: wren-ai-service-gpt-4.1-mini

  # GPT-o4-mini AI Service
  wren-ai-service-gpt-o4-mini:
    image: ghcr.io/canner/wren-ai-service:${WREN_AI_SERVICE_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${WREN_AI_SERVICE_PORT_GPT_O4_MINI}
    ports:
      - ${AI_SERVICE_FORWARD_PORT_GPT_O4_MINI}:${WREN_AI_SERVICE_PORT_GPT_O4_MINI}
    environment:
      PYTHONUNBUFFERED: 1
      CONFIG_PATH: /app/config.yaml
      WREN_AI_SERVICE_PORT: ${WREN_AI_SERVICE_PORT_GPT_O4_MINI}
      QDRANT_HOST: qdrant
    env_file:
      - ${PROJECT_DIR}/.env
    volumes:
      - ${PROJECT_DIR}/config.gpt-o4-mini.yaml:/app/config.yaml:ro
      - ${PROJECT_DIR}/data:/app/data:ro
      - data:/app/data
    networks:
      - wren
    depends_on:
      - qdrant
    container_name: wren-ai-service-gpt-o4-mini

  # GPT-o3 AI Service
  wren-ai-service-gpt-o3:
    image: ghcr.io/canner/wren-ai-service:${WREN_AI_SERVICE_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${WREN_AI_SERVICE_PORT_GPT_O3}
    ports:
      - ${AI_SERVICE_FORWARD_PORT_GPT_O3}:${WREN_AI_SERVICE_PORT_GPT_O3}
    environment:
      PYTHONUNBUFFERED: 1
      CONFIG_PATH: /app/config.yaml
      WREN_AI_SERVICE_PORT: ${WREN_AI_SERVICE_PORT_GPT_O3}
      QDRANT_HOST: qdrant
    env_file:
      - ${PROJECT_DIR}/.env
    volumes:
      - ${PROJECT_DIR}/config.gpt-o3.yaml:/app/config.yaml:ro
      - ${PROJECT_DIR}/data:/app/data:ro
      - data:/app/data
    networks:
      - wren
    depends_on:
      - qdrant
    container_name: wren-ai-service-gpt-o3

  # Claude Sonnet 4 AI Service
  wren-ai-service-claude-sonnet-4:
    image: ghcr.io/canner/wren-ai-service:${WREN_AI_SERVICE_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    expose:
      - ${WREN_AI_SERVICE_PORT_CLAUDE_SONNET_4}
    ports:
      - ${AI_SERVICE_FORWARD_PORT_CLAUDE_SONNET_4}:${WREN_AI_SERVICE_PORT_CLAUDE_SONNET_4}
    environment:
      PYTHONUNBUFFERED: 1
      CONFIG_PATH: /app/config.yaml
      WREN_AI_SERVICE_PORT: ${WREN_AI_SERVICE_PORT_CLAUDE_SONNET_4}
      QDRANT_HOST: qdrant
    env_file:
      - ${PROJECT_DIR}/.env
    volumes:
      - ${PROJECT_DIR}/config.claude-sonnet-4.yaml:/app/config.yaml:ro
      - ${PROJECT_DIR}/data:/app/data:ro
      - data:/app/data
    networks:
      - wren
    depends_on:
      - qdrant
    container_name: wren-ai-service-claude-sonnet-4

  # GPT-4.1-mini UI
  wren-ui-gpt-4.1-mini:
    image: ghcr.io/canner/wren-ui:${WREN_UI_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    environment:
      DB_TYPE: sqlite
      SQLITE_FILE: /app/data/db.sqlite3
      WREN_ENGINE_ENDPOINT: http://wren-engine:${WREN_ENGINE_PORT}
      WREN_AI_ENDPOINT: http://wren-ai-service-gpt-4.1-mini:${WREN_AI_SERVICE_PORT_GPT_4_1_MINI}
      IBIS_SERVER_ENDPOINT: http://ibis-server:${IBIS_SERVER_PORT}
      GENERATION_MODEL: ${GENERATION_MODEL_GPT_4_1_MINI}
      # telemetry
      WREN_ENGINE_PORT: ${WREN_ENGINE_PORT}
      WREN_AI_SERVICE_VERSION: ${WREN_AI_SERVICE_VERSION}
      WREN_UI_VERSION: ${WREN_UI_VERSION}
      WREN_ENGINE_VERSION: ${WREN_ENGINE_VERSION}
      USER_UUID: ${USER_UUID}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      # client side
      NEXT_PUBLIC_USER_UUID: ${USER_UUID}
      NEXT_PUBLIC_POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
      NEXT_PUBLIC_TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      EXPERIMENTAL_ENGINE_RUST_VERSION: ${EXPERIMENTAL_ENGINE_RUST_VERSION}
      # configs
      WREN_PRODUCT_VERSION: ${WREN_PRODUCT_VERSION}
    ports:
      - ${HOST_PORT_GPT_4_1_MINI}:3000
    volumes:
      - data:/app/data
    networks:
      - wren
    depends_on:
      - wren-ai-service-gpt-4.1-mini
      - wren-engine
    container_name: wren-ui-gpt-4.1-mini

  # GPT-o4-mini UI
  wren-ui-gpt-o4-mini:
    image: ghcr.io/canner/wren-ui:${WREN_UI_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    environment:
      DB_TYPE: sqlite
      SQLITE_FILE: /app/data/db.sqlite3
      WREN_ENGINE_ENDPOINT: http://wren-engine:${WREN_ENGINE_PORT}
      WREN_AI_ENDPOINT: http://wren-ai-service-gpt-o4-mini:${WREN_AI_SERVICE_PORT_GPT_O4_MINI}
      IBIS_SERVER_ENDPOINT: http://ibis-server:${IBIS_SERVER_PORT}
      GENERATION_MODEL: ${GENERATION_MODEL_GPT_O4_MINI}
      # telemetry
      WREN_ENGINE_PORT: ${WREN_ENGINE_PORT}
      WREN_AI_SERVICE_VERSION: ${WREN_AI_SERVICE_VERSION}
      WREN_UI_VERSION: ${WREN_UI_VERSION}
      WREN_ENGINE_VERSION: ${WREN_ENGINE_VERSION}
      USER_UUID: ${USER_UUID}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      # client side
      NEXT_PUBLIC_USER_UUID: ${USER_UUID}
      NEXT_PUBLIC_POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
      NEXT_PUBLIC_TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      EXPERIMENTAL_ENGINE_RUST_VERSION: ${EXPERIMENTAL_ENGINE_RUST_VERSION}
      # configs
      WREN_PRODUCT_VERSION: ${WREN_PRODUCT_VERSION}
    ports:
      - ${HOST_PORT_GPT_O4_MINI}:3000
    volumes:
      - data:/app/data
    networks:
      - wren
    depends_on:
      - wren-ai-service-gpt-o4-mini
      - wren-engine
    container_name: wren-ui-gpt-o4-mini

  # GPT-o3 UI
  wren-ui-gpt-o3:
    image: ghcr.io/canner/wren-ui:${WREN_UI_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    environment:
      DB_TYPE: sqlite
      SQLITE_FILE: /app/data/db.sqlite3
      WREN_ENGINE_ENDPOINT: http://wren-engine:${WREN_ENGINE_PORT}
      WREN_AI_ENDPOINT: http://wren-ai-service-gpt-o3:${WREN_AI_SERVICE_PORT_GPT_O3}
      IBIS_SERVER_ENDPOINT: http://ibis-server:${IBIS_SERVER_PORT}
      GENERATION_MODEL: ${GENERATION_MODEL_GPT_O3}
      # telemetry
      WREN_ENGINE_PORT: ${WREN_ENGINE_PORT}
      WREN_AI_SERVICE_VERSION: ${WREN_AI_SERVICE_VERSION}
      WREN_UI_VERSION: ${WREN_UI_VERSION}
      WREN_ENGINE_VERSION: ${WREN_ENGINE_VERSION}
      USER_UUID: ${USER_UUID}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      # client side
      NEXT_PUBLIC_USER_UUID: ${USER_UUID}
      NEXT_PUBLIC_POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
      NEXT_PUBLIC_TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      EXPERIMENTAL_ENGINE_RUST_VERSION: ${EXPERIMENTAL_ENGINE_RUST_VERSION}
      # configs
      WREN_PRODUCT_VERSION: ${WREN_PRODUCT_VERSION}
    ports:
      - ${HOST_PORT_GPT_O3}:3000
    volumes:
      - data:/app/data
    networks:
      - wren
    depends_on:
      - wren-ai-service-gpt-o3
      - wren-engine
    container_name: wren-ui-gpt-o3

  # Claude Sonnet 4 UI
  wren-ui-claude-sonnet-4:
    image: ghcr.io/canner/wren-ui:${WREN_UI_VERSION}
    restart: on-failure
    platform: ${PLATFORM}
    environment:
      DB_TYPE: sqlite
      SQLITE_FILE: /app/data/db.sqlite3
      WREN_ENGINE_ENDPOINT: http://wren-engine:${WREN_ENGINE_PORT}
      WREN_AI_ENDPOINT: http://wren-ai-service-claude-sonnet-4:${WREN_AI_SERVICE_PORT_CLAUDE_SONNET_4}
      IBIS_SERVER_ENDPOINT: http://ibis-server:${IBIS_SERVER_PORT}
      GENERATION_MODEL: ${GENERATION_MODEL_CLAUDE_SONNET_4}
      # telemetry
      WREN_ENGINE_PORT: ${WREN_ENGINE_PORT}
      WREN_AI_SERVICE_VERSION: ${WREN_AI_SERVICE_VERSION}
      WREN_UI_VERSION: ${WREN_UI_VERSION}
      WREN_ENGINE_VERSION: ${WREN_ENGINE_VERSION}
      USER_UUID: ${USER_UUID}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      # client side
      NEXT_PUBLIC_USER_UUID: ${USER_UUID}
      NEXT_PUBLIC_POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
      NEXT_PUBLIC_TELEMETRY_ENABLED: ${TELEMETRY_ENABLED}
      EXPERIMENTAL_ENGINE_RUST_VERSION: ${EXPERIMENTAL_ENGINE_RUST_VERSION}
      # configs
      WREN_PRODUCT_VERSION: ${WREN_PRODUCT_VERSION}
    ports:
      - ${HOST_PORT_CLAUDE_SONNET_4}:3000
    volumes:
      - data:/app/data
    networks:
      - wren
    depends_on:
      - wren-ai-service-claude-sonnet-4
      - wren-engine
    container_name: wren-ui-claude-sonnet-4